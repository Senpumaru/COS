{"ast":null,"code":"import axios from \"axios\";\nconst endpointURL = \"http://localhost:4000/graphql\";\n\nasync function graphqlRequest(query, variables = {}) {\n  const response = await fetch(endpointURL, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: query,\n      variables: variables\n    })\n  });\n  const responseBody = await response.json();\n  return responseBody.data;\n}\n\nexport async function loadJob(jobId) {\n  const query = `query JobQuery($jobId: ID!) {\n  \n        job(id: $jobId) {\n          id\n          title\n          company {\n            id\n            name\n          }\n          description\n        }\n      }`;\n  const data = await graphqlRequest(query, {\n    jobId\n  });\n  return data.job;\n}\nexport async function loadJobs() {\n  query = `{\n                  jobs {\n                    id\n                    title\n                    \n                    company {\n                      id\n                      name\n                      \n                    }\n                  }\n                }\n                \n              `;\n  const {\n    jobs\n  } = await graphqlRequest(query);\n  return jobs;\n}","map":{"version":3,"sources":["/media/zen/Bioinformatics/Oncology/Project/COS/Apps/Test/src/requests.js"],"names":["axios","endpointURL","graphqlRequest","query","variables","response","fetch","method","headers","body","JSON","stringify","responseBody","json","data","loadJob","jobId","job","loadJobs","jobs"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAG,+BAApB;;AAEA,eAAeC,cAAf,CAA8BC,KAA9B,EAAqCC,SAAS,GAAG,EAAjD,EAAqD;AACnD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,WAAD,EAAc;AACxCM,IAAAA,MAAM,EAAE,MADgC;AAExCC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF+B;AAGxCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,MAAAA,KAAK,EAAEA,KADY;AAEnBC,MAAAA,SAAS,EAAEA;AAFQ,KAAf;AAHkC,GAAd,CAA5B;AAQA,QAAMQ,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA3B;AACA,SAAOD,YAAY,CAACE,IAApB;AACD;;AAED,OAAO,eAAeC,OAAf,CAAuBC,KAAvB,EAA8B;AACnC,QAAMb,KAAK,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAXE;AAYA,QAAMW,IAAI,GAAG,MAAMZ,cAAc,CAACC,KAAD,EAAQ;AAAEa,IAAAA;AAAF,GAAR,CAAjC;AAEA,SAAOF,IAAI,CAACG,GAAZ;AACD;AAED,OAAO,eAAeC,QAAf,GAA0B;AAC/Bf,EAAAA,KAAK,GAAI;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAbE;AAeA,QAAM;AAAEgB,IAAAA;AAAF,MAAW,MAAMjB,cAAc,CAACC,KAAD,CAArC;AACA,SAAOgB,IAAP;AACD","sourcesContent":["import axios from \"axios\";\n\nconst endpointURL = \"http://localhost:4000/graphql\";\n\nasync function graphqlRequest(query, variables = {}) {\n  const response = await fetch(endpointURL, {\n    method: \"POST\",\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({\n      query: query,\n      variables: variables,\n    }),\n  });\n  const responseBody = await response.json();\n  return responseBody.data;\n}\n\nexport async function loadJob(jobId) {\n  const query = `query JobQuery($jobId: ID!) {\n  \n        job(id: $jobId) {\n          id\n          title\n          company {\n            id\n            name\n          }\n          description\n        }\n      }`;\n  const data = await graphqlRequest(query, { jobId });\n\n  return data.job;\n}\n\nexport async function loadJobs() {\n  query = `{\n                  jobs {\n                    id\n                    title\n                    \n                    company {\n                      id\n                      name\n                      \n                    }\n                  }\n                }\n                \n              `;\n\n  const { jobs } = await graphqlRequest(query);\n  return jobs;\n}\n"]},"metadata":{},"sourceType":"module"}