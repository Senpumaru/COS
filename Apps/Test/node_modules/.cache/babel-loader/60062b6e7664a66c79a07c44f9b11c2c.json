{"ast":null,"code":"import axios from \"axios\";\nconst endpointURL = \"http://localhost:4000/graphql\";\nexport async function loadJobs() {\n  const response = await fetch(endpointURL, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: `{\n                jobs {\n                  id\n                  title\n                  \n                  company {\n                    id\n                    name\n                    \n                  }\n                }\n              }\n              \n            `\n    })\n  });\n  const responseBody = await response.json();\n  return responseBody.data.jobs;\n}\nexport async function loadJob(jobId) {\n  const response = await fetch(endpointURL, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: `query JobQuery($jobId: ID!) {\n\n            job(id: $jobId) {\n              id\n              title\n              company {\n                id\n                name\n              }\n              description\n            }\n          }`,\n      variables: {\n        jobId\n      }\n    })\n  });\n  const responseBody = await response.json();\n  return responseBody.data.jobs;\n}","map":{"version":3,"sources":["/media/zen/Bioinformatics/Oncology/Project/COS/Apps/Test/src/requests.js"],"names":["axios","endpointURL","loadJobs","response","fetch","method","headers","body","JSON","stringify","query","responseBody","json","data","jobs","loadJob","jobId","variables"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAG,+BAApB;AAEA,OAAO,eAAeC,QAAf,GAA0B;AAC/B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,WAAD,EAAc;AACxCI,IAAAA,MAAM,EAAE,MADgC;AAExCC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF+B;AAGxCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdyB,KAAf;AAHkC,GAAd,CAA5B;AAoBA,QAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAA3B;AACA,SAAOD,YAAY,CAACE,IAAb,CAAkBC,IAAzB;AACD;AAED,OAAO,eAAeC,OAAf,CAAuBC,KAAvB,EAA8B;AACnC,QAAMb,QAAQ,GAAG,MAAMC,KAAK,CAACH,WAAD,EAAc;AACxCI,IAAAA,MAAM,EAAE,MADgC;AAExCC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF+B;AAGxCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAZyB;AAafO,MAAAA,SAAS,EAAE;AAACD,QAAAA;AAAD;AAbI,KAAf;AAHkC,GAAd,CAA5B;AAmBA,QAAML,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAA3B;AACA,SAAOD,YAAY,CAACE,IAAb,CAAkBC,IAAzB;AACD","sourcesContent":["import axios from \"axios\";\n\nconst endpointURL = \"http://localhost:4000/graphql\";\n\nexport async function loadJobs() {\n  const response = await fetch(endpointURL, {\n    method: \"POST\",\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `{\n                jobs {\n                  id\n                  title\n                  \n                  company {\n                    id\n                    name\n                    \n                  }\n                }\n              }\n              \n            `,\n    }),\n  });\n  const responseBody = await response.json();\n  return responseBody.data.jobs;\n}\n\nexport async function loadJob(jobId) {\n  const response = await fetch(endpointURL, {\n    method: \"POST\",\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `query JobQuery($jobId: ID!) {\n\n            job(id: $jobId) {\n              id\n              title\n              company {\n                id\n                name\n              }\n              description\n            }\n          }`,\n          variables: {jobId}\n    }),\n  });\n  const responseBody = await response.json();\n  return responseBody.data.jobs;\n}\n"]},"metadata":{},"sourceType":"module"}