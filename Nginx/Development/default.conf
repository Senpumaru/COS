# Upstream server, which is our Gunicorn application
upstream DjangoBackend {
    # Docker will automatically resolve this to the correct address because we use the same name as the service: "backend"
    server django_rest:8000;
}

# upstream ApolloBackend{
#   server apollo_graphql:4000;
# }

## Main servers ##
server {

    listen 80;
    server_name localhost;
    client_max_body_size 100M;

    # Django REST API
    location / {
        # Everything is passed to Gunicorn
        proxy_pass http://DjangoBackend;
        # Takes the value of the original XFF header retrieved from the client and adds the NGINX server's IP address to the end
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-NginX-Proxy true;
        # CORS
        
    }

    location /api {
        # Everything is passed to Gunicorn
        proxy_pass http://DjangoBackend$request_uri;
        # Takes the value of the original XFF header retrieved from the client and adds the NGINX server's IP address to the end
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-NginX-Proxy true;
        # CORS
        
    }

    location /static/ {
        autoindex on;
        alias /Backend/Django/static/;
    }

    location /media/ {
        autoindex on;
        alias /Backend/Django/media/;
    }
}
